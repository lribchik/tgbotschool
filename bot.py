import threading
import os
from http.server import BaseHTTPRequestHandler, HTTPServer
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = "8051897019:AAGoKF_s5t3AWuWn6XtZXzGB0vPnjohyTRM"

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é


# –§–æ–Ω–æ–≤—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä-–∑–∞–≥–ª—É—à–∫–∞
class DummyServer(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        self.wfile.write(b'Bot is running')

def run_dummy_server():
    port = int(os.environ.get("PORT", 8080))
    httpd = HTTPServer(("0.0.0.0", port), DummyServer)
    httpd.serve_forever()



async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–û—Ñ—Ñ. —Å–∞–π—Ç –ü–î–†", url="https://—Ä—Ñ-–ø–æ–∏—Å–∫.—Ä—Ñ/")],
        [InlineKeyboardButton("–ü–æ–∏—Å–∫–æ–≤—ã–µ –æ—Ç—Ä—è–¥—ã –¢—é–º–µ–Ω–∏", callback_data="category_tymen")],
        [InlineKeyboardButton("–ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã", callback_data="category_materials")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    if update.message:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=reply_markup)
    else:
        await update.callback_query.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "category_tymen":
        text = (
            "–ó–¥–µ—Å—å —É–∫–∞–∑–∞–Ω—ã –ü–æ–∏—Å–∫–æ–≤—ã–µ –æ—Ç—Ä—è–¥—ã –¢–û–õ–¨–ö–û —Å–æ—Å—Ç–æ—è—â–∏–µ –≤ –û–ü–¶\n\n"
            "(–∑–¥–µ—Å—å –±—É–¥—É—Ç —É–∫–∞–∑–∞–Ω—ã –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ —Å–∞–º–æ–π –¢—é–º–µ–Ω–∏ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ, "
            "–µ—Å–ª–∏ –≤–∞–º –Ω–∞–¥–æ –æ–±–ª–∞—Å—Ç–∏, —Ç–æ –ª—É—á—à–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Å–∞–º–æ–≥–æ –û–ü–¶ –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–º...)"
        )
        keyboard = [
            [InlineKeyboardButton("–û–ü–¶", url="https://poisk-tyumen.ru/")],
            [InlineKeyboardButton('–í–ü–û "–ö—Ä–µ—á–µ—Ç"', url="https://vk.com/club9613984?from=groups")],
            [InlineKeyboardButton("C–∞–≤–æ—è—Ä", url="https://vk.com/savoyar72")],
            [InlineKeyboardButton("–ü–∞–º—è—Ç—å-–°–µ—Ä–¥—Ü–∞", url="https://vk.com/club17624181")],
            [InlineKeyboardButton("–§–µ–Ω–∏–∫—Å", url="https://vk.com/public173598260")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        ]
        await query.message.edit_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == "category_materials":
        keyboard = [
            [InlineKeyboardButton("–í–ò–ü–¶", url="https://v-ipc.org/zapros/form/")],
            [InlineKeyboardButton("–ü–∞–º—è—Ç—å –ù–∞—Ä–æ–¥–∞", url="https://pamyat-naroda.ru/")],
            [InlineKeyboardButton("–ú–µ–º–æ—Ä–∏–∞–ª", url="https://obd-memorial.ru/html/")],
            [InlineKeyboardButton("–ö–Ω–∏–≥–∞ –ü–∞–º—è—Ç–∏ –¢—é–º–µ–Ω—å", url="https://–ø–∞–º—è—Ç—å.72to.ru/")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        ]
        await query.message.edit_text("–ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == "main_menu":
        await start(update, context)

# –ó–∞–ø—É—Å–∫ –∑–∞–≥–ª—É—à–∫–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=run_dummy_server).start()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_handler))

app.run_polling()
